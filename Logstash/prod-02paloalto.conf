
filter {

   if [type] == "paloalto" {

      ### Identify Classification ###

      if [message] =~ /TRAFFIC/ {

         csv {
             columns => [ "Domain", "ReceiveTime", "Serial", "classification", "ThreatContent Type", "Config Version", "GenerateTime", "SourceIP", "DestinationIP", "NAT Source IP", "NAT Destination IP", "Rule", "Source User","Destination User","Application","Virtual System","Source Zone","Destination Zone","Inbound Interface","Outbound Interface","LogProfile", "column1","Session ID","Repeat Count","SourcePort","DstPort","NAT Source Port","NAT Destination Port","Flags","protocol","Action","Bytes","Bytes Sent","Bytes Received","Packets","Start Time","Elapsed Time (sec)","Category","seqno","actionflags","Source Country","Destination Country","pkts_sent","pkts_received", "SessionEndReason", "HL1", "HL2", "HL3", "HL4", "VSName", "LogHost", "ActionSource" ]

             remove_field => [ "Domain", "ReceiveTime", "Serial", "actionflags", "Config Version", "cpadding", "Flags", "Elapsed Time (sec)", "Inbound Interface", "Outbound Interface", "column1", "LogAction", "NAT Source IP", "NAT Destination IP", "SourcePort", "NAT Source Port","NAT Destination Port", "Padding", "seqno", "Session ID", "Source Port", "Time Logged", "Virtual System", "message", "Start Time", "HL1", "HL2", "HL3", "HL4", "VSName", "LogHost" ]
             add_tag => [ "PA-traffic"]
        }

        if ["Source Zone"] == "GLBL_PRTCT" and [DestinationIP] == "10.128.69.222" and [Action] == "deny" { drop {} }
     # End if message = TRAFFIC
     }
     else if [message] =~ /THREAT/ {
        csv {
             columns => [ "Domain", "ReceiveTime", "Serial", "classification", "ThreatContent Type", "Config Version", "GenerateTime", "SourceIP", "DestinationIP", "NAT Source IP", "NAT Destination IP", "Rule", "Source User","Destination User","Application","Virtual System","Source Zone","Destination Zone","Inbound Interface","Outbound Interface","LogAction","Time Logged","Session ID","Repeat Count","SourcePort","DstPort","NAT Source Port","NAT Destination Port","Flags","protocol","Action", "URL","Threat/Content Name","Category","Severity","Direction","seqno","actionflags","Source Country","Destination Country","cpadding","contenttype", "pcap_id", "filedigest", "cloud", "URLIndex", "UserAgent", "FileType", "XForwardfor", "Referrer", "Sender", "Subject", "Recipient", "ReportID",  "HL1", "HL2", "HL3", "HL4", "VSName", "LogHost", "Future" ]

             remove_field => [ "Domain", "ReceiveTime", "actionflags", "Config Version", "Flags", "Inbound Interface", "Outbound Interface", "LogAction", "SourcePort", "NAT Source IP", "NAT Destination IP","NAT Source Port","NAT Destination Port", "Padding", "Direction", "seqno", "Serial", "Session ID", "Source Port", "Time Logged", "Virtual System",  "cpadding","content type", "message", "pcap_id", "filedigest", "cloud",  "HL1", "HL2", "HL3", "HL4", "LogHost"]
             add_tag => [ "PA-threat" ]
        }

#        grok { match => [ "URL", "%{URIPATH:url_nonquery}" ] }
#        mutate {
#            split => { "URL" => "/" }
#            rename => { "[URL][0]" => "URL1" }
#            add_field => { "[URL][0]" => "URL2" }
#        }
     # End if message = THREAT
     }
    else if [message] =~ /SYSTEM/ {
        csv {
            columns => [ "Domain", "ReceiveTime", "Serial", "classification", "subtype", "config_ver", "GenerateTime", "Virtual System", "EventID", "sub-type", "fmt", "id", "module", "severity", "Description", "Seq No", "ActionFlags", "HL1", "HL2", "HL3", "HL4", "Virtual System", "Device Name" ]
            add_tag => [ "PA-SYSTEM"]
        }
        mutate {
             remove_field => [ "Domain", "config_ver", "module", "EventID", "fmt", "id", "column16", "column17" ]
             add_field => { "EventID" => "PA-System-%{sub_type}" }
        }
    }
    else if [message] =~ /CORRELATION/ {
         csv {
            #columns => [ "GenerateTime", "Serial", "Source User", "classification", "Column1", "VirtualSystem", "Destination User", "SourceIP", "EventID", "What", "Anumber",  "Severity", "Description"]
            columns => [ "GenerateTime", "Serial", "Device Name", "classification", "VirtualSystem", "Virtual System ID", "HL1", "HL2", "HL3", "HL4", "Source User", "SourceIP", "subtype", "EventID", "Category",  "Severity", "Description"]
            add_tag => [ "PA-CORRELATION"]
         }
    } # End CORRELATION

    else if [message] =~ /CONFIG/ {
         csv {
            columns => [ "Domain", "ReceiveTime", "Serial", "classification", "subtype", "FUTURE_USE1", "GenerateTime", "SourceIP", "VirtualSystem", "Command", "Source User", "Client", "Result", "Configuration Path", "Sequence Number", "Action Flags", "Before Change Detail", "After Change Detail", "HL1" , "HL2" , "HL3" , "HL4"  , "Virtual System" , "Device Name" ]
            add_tag => [ "PA-CONFIG"]
         }
    } # End CONFIG



     ### Common to all types ###
    if [DestinationIP] == "10.128.69.222" and [SourceIP] =~ /172\.27\.15\./ { drop {} }

    cidr {
         address => [ "%{SourceIP}"]
         network => [ "10.160.0.0/16" ]
         add_field => [ "Location", "Chantilly Workstation"]
    }
    cidr {
         address => [ "%{SourceIP}"]
        network => [ "10.49.0.0/16" ]
         add_field => [ "Location", "Arlington  Heights"]
    }
    cidr {
         address => [ "%{SourceIP}"]
         network => [ "10.128.0.0/16" ]
         add_field => [ "Location", "Chantilly Server"]
    }
    cidr {
         address => [ "%{SourceIP}"]
         network => [ "172.27.0.0/16" ]
         add_field => [ "Location", "VPN User"]
    }
    cidr {
         address => [ "%{SourceIP}"]
         network => [ "10.161.2.0/24" ]
         add_field => [ "Location", "Admin Workstation"]
    }

    dns {
        reverse   => [ "SourceHost" ]
        action      => "replace"
    }
    grok {
        match => [ "SourceHost", "%{WORD:Dept}-%{GREEDYDATA}" ]
        add_tag => ["SourceHost_Dept"]
    }
    grok {
        match => [ "SourceHost", "%{DATA:Abbrhost}\.%{GREEDYDATA}" ]
        add_tag => [ "SourceHost_hostname" ]
    }

    mutate {
        rename => [ "Abbrhost", "HostName" ]
        remove_field => [ "Abbrhost" ]
    }
    translate {
        field => "Dept"
        destination => "Department"
        regex => "true"
        dictionary_path => "/etc/logstash/dictionary/department.yaml"
        remove_field => "Dept"
    }
    mutate {

         add_field => { "EventID" => "PA-%{Action}.%{Application}" }
#        add_field => ["SourceHost", "%{SourceIP}" ]
           convert => [ "Bytes", "integer" ]
           convert => [ "Bytes Received", "integer" ]
           convert => [ "Bytes Sent", "integer" ]
           convert => [ "Repeat Count", "integer" ]
            rename => [ "Source User", "UserName" ]
              gsub => [ "GenerateTime", "/", "-" ]
              gsub => [ "ReceiveTime", "/", "-" ]
    }
    date {
         match => [ "GenerateTime", "YYYY-MM-dd HH:mm:ss" ]
    }
    grok {
        match => ["Source User", "%{WORD}\\%{WORD:UserName}" ]
        add_tag => [ "SourceUser" ]
    }
    if [SourceIP] !~ /^10\./ {
       geoip { source => "SourceIP" }
    }
    if [DestinationIP] !~ /^10\./ {
       geoip { source => "DestinationIP"
               target => "geoipd"
       }
    }
    ## End if Type = PaloAlto
   }

# End Filter
}


#    else if [message] =~ /CONFIG/ {
#        csv {
#            columns => [ "Domain", "ReceiveTime", "Serial", "classification", "subtype", "config_ver", "AnotherTime", "SourceIP", "EventID", "sub-type", "UserName", "id", "module", "severity", "Description" ]
#        }
#    }
#

#               translate {
#                       field => "SourceIP"
#                       destination => "Location"
#                       regex => "true"
#                       dictionary => [
#                                       "10\.16*", "Chantilly Workstation",
#                                       "10\.49*", "IISI",
#                                       "10\.50*", "Rio Rancho",
#                                       "10\.64*", "Production Servers",
#                                       "10\.96*", "Terminal Servers",
#                                       "10\.128*", "Corporate Servers",
#                                       "10\.161\.2*", "Admin Workstation",
#                                       "172\.27*", "VPN User"
#                       ]
#               }
#
