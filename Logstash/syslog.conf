# syslog.conf
input {
  tcp {
    port => 5000
    type => syslog

  }
  udp {
    port => 5000
    type => syslog
  }
}

filter {

  grep {
      type => "syslog"
      match => [ "@message", "30202" ]
      negate => true
  }

  grep {
      type => "syslog"
      match => [ "@message", "ASA-7-60900" ]
      negate => true
  }
  grok {
      type => "syslog"
      pattern => [ "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{@source_host}" ]
  }
  syslog_pri {
      type => "syslog"
  }
  date {
      type => "syslog"
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
  }
  mutate {
      type => "syslog"
      exclude_tags => "_grokparsefailure"
      replace => [ "@source_host", "%{syslog_hostname}" ]
      replace => [ "@message", "%{syslog_message}" ]
  }
  mutate {
      type => "syslog"
      remove => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
  }
  grok {

   type => "syslog"
   patterns_dir => "/etc/logstash/patterns"
   pattern => [ "%{PA_BASE}" , "%{PA_TRAFFIC}" , "%{PA_THREAT}" ]
#   pattern => ".*PA-5020.*(TRAFFIC|URL|THREAT),.*,.*,%{IP:srcIP},%{IP:dstIP},,,%{NOTSPACE:RuleDescription},%{NOTSPACE:Username},,%{NOTSPACE:Application},(.*)"
    pattern => "1,%{DATA:ReceiveTime},%{DATA:serial},%{DATA:type},%{DATA:threat},.,%{DATA:GenerateTime},%{IP:srcIP},%{IP:dstIP},.*?,.*?,%{DATA:RuleDescription},%{DATA:Username},%{DATA:dstUser},%{DATA:application},%{DATA:Vsystem},%{DATA:SrcZone},%{DATA:DstZone},%{DATA:InbountInt},%{DATA:OutboundInt},%{DATA:Logaction},%{DATA:TimeLogged},%{INT:sessionID},%{INT:RepeatCount},%{INT:sport},%{INT:dport},.*?,.*?,%{BASE16NUM:flags},%{DATA:protocol},%{DATA:action},%{GREEDYDATA:PA_DETAIL}.*$"
   add_tag => "PaloAlto"
   remove_tag => "_grokparsefailure"

  }

  grok {
     type => "syslog"
    pattern => ".*SecureSphere.*\|%{DATA:severity}\|act=%{DATA:action} dst=%{IP:dstIP} dpt=%{INT:dport} duser=%{DATA:Username} src=%{IP:srcIP} spt=%{INT:sport} proto=%{DATA:protocol}.*cs5=%{DATA:RuleDescription} cs5Label"
    add_tag => "Imperva"
   remove_tag => "_grokparsefailure"
  }

  grok {
     type => "syslog"
     match => [ "@message" , "%ASA" ]
     add_tag => "cisco-fw"
  }
syslog_pri {
      tags => "cisco-fw"
   }
   mutate {
      tags => "cisco-fw"
      exclude_tags => "_grokparsefailure"
      replace => [ "@source_host", "%{logsource}" ]
      replace => [ "@message", "%{syslog_message}" ]
   }
  # for optional fields (device name in message, Cisco syslog tag)
  grok {
    tags => "cisco-fw"
    patterns_dir => "/etc/logstash/patterns"
    pattern => "(?:%{SYSLOGHOST:device} )?(?:: )?%%{CISCOFWTAG:VendorID}:%{GREEDYDATA}"
  }

  # we extract fields
  grok {
    tags => "cisco-fw"
    break_on_match => false
    patterns_dir => "/etc/logstash/patterns"
    pattern => [
    "%{CISCOFW1}",
    "%{CISCOFW2}",
    "%{CISCOFW3}",
    "%{CISCOFW4}",
    "%{CISCOFW4b}",
    "%{CISCOFW5}",
    "%{CISCOFW6a}",
    "%{CISCOFW6b}",
    "%{CISCOFW7}",
    "%{CISCOFW8}",
    "%{CISCOFW9}",
    "%{CISCOFW10}",
    "%{CISCOFW11}",
    "%{CISCOFW12}",
    "%{CISCOFW13}",
    "%{CISCOFW14}",
    "%{CISCOFW15}",
    "%{CISCOFW16}",
    "%{CISCOFW17}",
    "%{CISCOFW18}"
    ]
  }

  date {
    tags => "cisco-fw"
    timestamp8601 => ISO8601
    timestamp => [
    "MMM dd HH:mm:ss.SSS",
    "MMM  d HH:mm:ss.SSS",
    "MMM dd HH:mm:ss",
    "MMM  d HH:mm:ss",
    "MMM dd yyyy HH:mm:ss.SSS",
    "MMM  d yyyy HH:mm:ss.SSS",
    "MMM dd yyyy HH:mm:ss",
    "MMM  d yyyy HH:mm:ss"
    ]
    innertimestamp => [
    "MMM dd HH:mm:ss.SSS",
    "MMM  d HH:mm:ss.SSS",
    "MMM dd HH:mm:ss",
    "MMM  d HH:mm:ss",
    "MMM dd yyyy HH:mm:ss.SSS",
    "MMM  d yyyy HH:mm:ss.SSS",
    "MMM dd yyyy HH:mm:ss",
    "MMM  d yyyy HH:mm:ss",
    "yyyy-MM-dd HH:mm:ss.SSS",
    "yyyy-MM-dd HH:mm:ss"
    ]

    locale => "Locale.US"
  }


}

output {
  # Example just to output to elasticsearch
  elasticsearch { }
}
